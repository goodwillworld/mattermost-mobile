def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# --- SAFE Expo autolinking (only if Expo is installed) ---
expo_pkg = `node -e "try{console.log(require.resolve('expo/package.json'))}catch(e){}"`.strip
if !expo_pkg.empty? && File.exist?(File.join(File.dirname(expo_pkg), "scripts/autolinking.rb"))
  require File.join(File.dirname(expo_pkg), "scripts/autolinking")
  $expo_modules_available = true
else
  Pod::UI.puts "Expo not detected; skipping Expo autolinking.".yellow
  $expo_modules_available = false
  # Define no-op to avoid undefined method error
  def use_expo_modules!(*args); end
end
# ---------------------------------------------------------

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, '15.1'
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

setup_permissions([
  "Camera",
  "Microphone",
  "Notifications",
  "PhotoLibrary"
])

target 'Mattermost' do
  use_expo_modules!
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi', :modular_headers => true
  pod 'React-jsc', :path => '../node_modules/react-native/ReactCommon/jsc', :modular_headers => true
  pod 'simdjson', :path => '../node_modules/@nozbe/simdjson', :modular_headers => true
  pod 'CocoaLumberjack', :modular_headers => true
  pod 'TurboLogIOSNative', :git => 'https://github.com/larkox/react-native-turbo-log-ios-native.git', :tag => '0.2.0', :modular_headers => true

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
    installer.pods_project.targets.each do |target|
      if target.name == 'TurboLogIOSNative'
        target.build_configurations.each do |config|
          config.build_settings['SWIFT_VERSION'] = '5.0'
          config.build_settings['EXCLUDED_SOURCE_FILE_NAMES'] = ['module.modulemap']
        end
      end
    end
  end
end

target 'NotificationService' do
  pod 'TurboLogIOSNative', :git => 'https://github.com/larkox/react-native-turbo-log-ios-native.git', :tag => '0.2.0', :modular_headers => true
  pod 'Sentry/HybridSDK', '8.48.0'
end

target 'MattermostShare' do
  pod 'Sentry/HybridSDK', '8.48.0'
end